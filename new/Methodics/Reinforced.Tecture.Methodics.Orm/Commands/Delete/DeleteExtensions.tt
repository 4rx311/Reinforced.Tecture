<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	var implementationsCount = 7;
#>
using Reinforced.Tecture.Commands;

namespace Reinforced.Tecture.Methodics.Orm.Commands.Delete
{
    public static partial class Extensions
    {
    <# for (int i=0;i<implementationsCount;i++) {	#> 

        /// <summary>
        /// Adds entity to storage
        /// </summary>
        /// <param name="pipeline">Tecture pipeline</param>
        /// <param name="entity">Entity</param>
        /// <typeparam name="TEntity">Entity type</typeparam>
        <# for(int j =0;j<=i;j++) { #>/// <typeparam name="T<#= j+1 #>">Not used</typeparam> 
        <# } #>
        
        /// <returns>Add command instance</returns>
        public static DeleteCommand Delete<<# for(int j =0;j<=i;j++) { #>T<#= j+1 #>, <# } #>TEntity>(this ServicePipeline<<# for(int j =0;j<=i;j++) { #>T<#= j+1 #>, <# } #>TEntity> pipeline, TEntity entity)
        {
           return DeleteCore(pipeline, entity);
        }
    <# } #>

    }
}
